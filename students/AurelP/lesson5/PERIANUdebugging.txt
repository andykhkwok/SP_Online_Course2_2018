
The function works correctly only for numbers that are power of 2. For any number that doesn't meet this criteria, the function will loop indefinitely or until it reaches the system maxim number of iterations when the recursive process is terminated by the system. At each iteration the n value is divided by two, resulting in very small numbers. If the number is less than two, the function will never return true. In this case, the solution is to add an extra condition for n that will return false for values less than one. 	


Aurels-MacBook-Pro:lesson5 aurelperianu$ python -m pdb recursive.py 4
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(1)<module>()
-> import sys
(Pdb) n
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(3)<module>()
-> def my_fun(n):
(Pdb) n
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(9)<module>()
-> if __name__ == '__main__':
(Pdb) n
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(10)<module>()
-> n = int(sys.argv[1])
(Pdb) n
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(11)<module>()
-> print(my_fun(n))
(Pdb) pp n
4
(Pdb) s
--Call--
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(3)my_fun()
-> def my_fun(n):
(Pdb) n
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(4)my_fun()
-> if n == 2:
(Pdb) n
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(7)my_fun()
-> return my_fun(n/2)
(Pdb) s
--Call--
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(3)my_fun()
-> def my_fun(n):
(Pdb) pp n
2.0
(Pdb) n
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(4)my_fun()
-> if n == 2:
(Pdb) n
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(5)my_fun()
-> return True
(Pdb) n
--Return--
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(5)my_fun()->True
-> return True
(Pdb) ll
  3  	def my_fun(n):
  4  	    if n == 2:
  5  ->	        return True
  6
  7  	    return my_fun(n/2)
(Pdb) n
--Return--
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(7)my_fun()->True
-> return my_fun(n/2)
(Pdb) n
True
--Return--
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(11)<module>()->None
-> print(my_fun(n))
(Pdb) n
--Return--
> <string>(1)<module>()->None
(Pdb) n
The program finished and will be restarted
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(1)<module>()
-> import sys
(Pdb) exit

````````````````````````````````````````````````````````````````````````````
Aurels-MacBook-Pro:lesson5 aurelperianu$ python -m pdb recursive.py 11
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(1)<module>()
-> import sys
(Pdb) ll
  1  ->	import sys
  2
  3  	def my_fun(n):
  4  	    if n == 2:
  5  	        return True
  6
  7  	    return my_fun(n/2)
  8
  9  	if __name__ == '__main__':
 10  	    n = int(sys.argv[1])
 11  	    print(my_fun(n))
(Pdb) n
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(3)<module>()
-> def my_fun(n):
(Pdb) n
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(9)<module>()
-> if __name__ == '__main__':
(Pdb) n
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(10)<module>()
-> n = int(sys.argv[1])
(Pdb) n
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(11)<module>()
-> print(my_fun(n))
(Pdb) s
--Call--
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(3)my_fun()
-> def my_fun(n):
(Pdb) ll
  3  ->	def my_fun(n):
  4  	    if n == 2:
  5  	        return True
  6
  7  	    return my_fun(n/2)
(Pdb) n
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(4)my_fun()
-> if n == 2:
(Pdb) ll
  3  	def my_fun(n):
  4  ->	    if n == 2:
  5  	        return True
  6
  7  	    return my_fun(n/2)
(Pdb) b 4
Breakpoint 1 at /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py:4
(Pdb) ll
  3  	def my_fun(n):
  4 B->	    if n == 2:
  5  	        return True
  6
  7  	    return my_fun(n/2)
(Pdb) c
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(4)my_fun()
-> if n == 2:
(Pdb) pp n
5.5
(Pdb) c
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(4)my_fun()
-> if n == 2:
(Pdb) pp n
2.75
(Pdb) c
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(4)my_fun()
-> if n == 2:
(Pdb) pp n
1.375
(Pdb) c
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(4)my_fun()
-> if n == 2:
(Pdb) pp n
0.6875
(Pdb) clear
Clear all breaks? y
Deleted breakpoint 1 at /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py:4
(Pdb) c
Traceback (most recent call last):
  File "/Users/aurelperianu/anaconda3/lib/python3.6/pdb.py", line 1667, in main
    pdb._runscript(mainpyfile)
  File "/Users/aurelperianu/anaconda3/lib/python3.6/pdb.py", line 1548, in _runscript
    self.run(statement)
  File "/Users/aurelperianu/anaconda3/lib/python3.6/bdb.py", line 431, in run
    exec(cmd, globals, locals)
  File "<string>", line 1, in <module>
  File "/Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py", line 11, in <module>
    print(my_fun(n))
  File "/Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py", line 7, in my_fun
    return my_fun(n/2)
  File "/Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py", line 7, in my_fun
    return my_fun(n/2)
  File "/Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py", line 7, in my_fun
    return my_fun(n/2)
  File "/Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py", line 4, in my_fun
    if n == 2:
  File "/Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py", line 7, in my_fun
    return my_fun(n/2)
  File "/Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py", line 7, in my_fun
    return my_fun(n/2)
  File "/Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py", line 7, in my_fun
    return my_fun(n/2)
  [Previous line repeated 981 more times]
  File "/Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py", line 4, in my_fun
    if n == 2:
RecursionError: maximum recursion depth exceeded in comparison
Uncaught exception. Entering post mortem debugging
Running 'cont' or 'step' will restart the program
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(4)my_fun()
-> if n == 2:
(Pdb) exit
Post mortem debugger finished. The recursive.py will be restarted
> /Users/aurelperianu/Documents/Python220/local/lesson5/recursive.py(1)<module>()
-> import sys
(Pdb) quit